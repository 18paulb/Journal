services:
  frontend:
    build:
      context: ./journalfrontend
    ports:
      - "3000:3000"
    networks:
      - "app-network"
    environment:
      - AUTH0_SECRET=4dbdaa8eccd69dbeadcd8cfef3fedd2511810eddc608b4381983d7b2db433966
      - AUTH0_BASE_URL=http://localhost:3000
      - AUTH0_ISSUER_BASE_URL=https://dev-asa0w72dk1qcqv3g.us.auth0.com
      - AUTH0_CLIENT_ID=NpXKrGREj23hFG9z0z4t15ApMNDqP8iE
      - AUTH0_CLIENT_SECRET=Z1B7TaYkXe-lRTizA9RY1ilmG2VuBYp8ZkKh9UeajYl9ZPUIyk-vQ_jUb4Lpe2PN
      - NASA_API_KEY=7I5PPrZvKdyl0ln21aWNDned6cmcFFRCkPzeqh1U
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000/api

  backend:
    build:
      context: ./journalbackend
    ports:
      - "8000:8000"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      REDIS_HOST: redis    # Service name 'redis' defined in Docker Compose
      REDIS_PORT: 6379
      AWS_SECRET_KEY_ID: ${AWS_SECRET_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}


  redis:
    image: "redis:alpine"
    container_name: redis
    networks:
      - app-network
    ports:
      - "6379:6379"

networks:
  app-network:
    driver: bridge
